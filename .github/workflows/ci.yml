name: superqr-ci

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CONAN_USER_HOME: ~/.conan2

jobs:
  build_libs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install system packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential ninja-build python3-pip \
          libgtk-3-dev

    - name: Install Conan 2 & CMake
      run: |
        pip3 install --upgrade "conan~=2.2" cmake ninja
        conan --version
        cmake --version

    - uses: actions/cache@v3
      id: conan-cache
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.*', 'profiles/**') }}

    - name: Conan install libs
      run: |
        conan install . -of build \
          -pr:b profiles/default \
          -pr:h profiles/default \
          -s build_type=Release \
          -c tools.system.package_manager:mode=install \
          -c tools.system.package_manager:sudo=True \
          --build=missing

  build_app:
    needs: build_libs
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/cache@v3
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.*', 'profiles/**') }}

    - name: Install minimal build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build python3-pip
        pip3 install --upgrade "conan~=2.2" cmake ninja

    - name: Build application
      run: |
        unset CC CXX AR LD AS RANLIB
        export PATH="/usr/bin:/usr/local/bin:$PATH"

        conan install . -of build \
          -pr:b profiles/default \
          -pr:h profiles/default \
          -s build_type=Release \
          --build=never

        cmake -S . -B build/app -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \
          -DCMAKE_BUILD_TYPE=Release

        cmake --build build/app

    - uses: actions/upload-artifact@v3
      with:
        name: demo-${{ github.sha }}
        path: build/app/demo
